{"version":3,"file":"static/js/591.e0f6f04f.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx","pages/NotFound/NotFound.jsx","services/movies-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionEl = styled.section`\n  padding-left: 16px;\n  padding-right: 16px;\n\n  padding: 24px 16px;\n\n  background-color: #293a36;\n`;\n\nexport const Title = styled.h2`\n    margin-bottom: 32px;\n`","import PropTypes from 'prop-types';\nimport { SectionEl, Title } from 'components/Section/Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionEl>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionEl>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { HiArrowLeft } from 'react-icons/hi';\n\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  margin-bottom: 28px;\n  font-size: 28px;\n`;\nexport const BackArrow = styled(HiArrowLeft)`\n  margin-right: 8px;\n`;\n\nexport const InfoWrapper = styled.div`\n    display: flex;\n    margin-bottom: 16px;\n`\nexport const Image = styled.img`\n    margin-right: 32px;    \n`\nexport const SubTitle = styled.h2`\n    color: #a8b3a8;\n`\n\nexport const Text = styled.p`\n    margin-bottom: 32px;\n`\nexport const List = styled.ul`\n    border-bottom: 1px solid #a8b3a8;\n    margin-bottom: 16px;\n`\nexport const Item = styled.li`\n    margin-bottom: 8px;\n`","import { Suspense } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\n\nimport {\n  BackLink,\n  BackArrow,\n  InfoWrapper,\n  Image,\n  SubTitle,\n  Text,\n  List,\n  Item,\n} from './MovieCard.styled';\n\nconst MovieCard = ({\n  movie: { poster_path, title, vote_average, overview, genres = [] },\n}) => {\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from ?? '/');\n  return (\n    <>\n      <BackLink to={backLocation.current} state={{ from: location }}>\n        <BackArrow size=\"24\" />\n        Back to previous page\n      </BackLink>\n      <article>\n        <InfoWrapper>\n          <Image\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : 'https://www.reelviews.net/resources/img/default_poster.jpg'\n            }\n            alt=\"\"\n            width=\"400\"\n          />\n          <div>\n            <SubTitle>{title}</SubTitle>\n            <Text>User Score: {Math.round(vote_average * 10)}&#37;</Text>\n            <SubTitle>Overview:</SubTitle>\n            <Text>{overview}</Text>\n            <SubTitle>Genres:</SubTitle>\n            <Text>{genres.map(genre => genre.name).join(', ')}</Text>\n          </div>\n        </InfoWrapper>\n        <SubTitle>Additional information</SubTitle>\n        <List>\n          <Item>\n            <Link to=\"cast\">Cast</Link>\n          </Item>\n          <Item>\n            <Link to=\"reviews\">Reviews</Link>\n          </Item>\n        </List>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </article>\n    </>\n  );\n};\n\nexport default MovieCard;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieById } from 'services/movies-api';\n\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport NotFound from 'pages/NotFound/NotFound';\nimport Section from 'components/Section/Section';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState('');\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const result = await getMovieById(movieId);\n        setMovie(result);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetch();\n  }, [movieId]);\n\n  return error ? (\n    <NotFound />\n  ) : (\n    <main>\n      <Section>\n        <MovieCard movie={movie} />\n      </Section>\n    </main>\n  );\n};\nexport default MovieDetails;\n","import Section from 'components/Section/Section';\n\nconst NotFound = () => {\n  return (\n    <main>\n      <Section>\n        <img\n          src=\"https://i.pinimg.com/originals/46/82/88/46828885c28a6bfa34dd4d6bd9986c8d.png\"\n          alt=\"Not Found Page\"\n        />\n      </Section>\n    </main>\n  );\n};\n\nexport default NotFound;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0a5061ab0f3f7e359a07b52243a53d24',\n  },\n});\n\nexport const getTrending = async () => {\n  const response = await api.get('trending/movie/day');\n  return response.data;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await api.get(\n    `/search/movie?query=${encodeURIComponent(query)}`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await api.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await api.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await api.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n"],"names":["SectionEl","styled","Title","title","children","BackLink","Link","BackArrow","HiArrowLeft","InfoWrapper","Image","SubTitle","Text","List","Item","movie","poster_path","vote_average","overview","genres","location","useLocation","backLocation","useRef","state","from","to","current","size","src","alt","width","Math","round","map","genre","name","join","Suspense","fallback","useState","setMovie","error","setError","movieId","useParams","useEffect","fetch","getMovieById","result","message","NotFound","Section","api","axios","baseURL","params","api_key","getTrending","get","response","data","getMovieByQuery","query","encodeURIComponent","id","getMovieCast","getMovieReviews"],"sourceRoot":""}