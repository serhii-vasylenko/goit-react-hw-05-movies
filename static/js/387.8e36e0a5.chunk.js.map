{"version":3,"file":"static/js/387.8e36e0a5.chunk.js","mappings":"8QAEaA,EAAOC,EAAAA,EAAAA,GAAH,kDAGJC,EAAQD,EAAAA,EAAAA,GAAH,iDAGLE,EAAOF,EAAAA,EAAAA,EAAH,6C,SCoCjB,EAtCgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,gHAEgBC,EAAAA,EAAAA,IAAgBJ,GAFhC,gBAEFK,EAFE,EAEFA,QACRN,EAAWM,GAHD,iDAKS,IAAIC,iBACZC,QAND,yDAAH,qDASXJ,GACD,GAAE,CAACH,KAGF,8BACGF,EAAQU,OAAS,GAChB,wBACGV,EAAQW,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACnB,EAAD,YACE,UAACE,EAAD,sBAAgBgB,MAChB,SAACf,EAAD,UAAOgB,MAFEF,EAKd,OAGH,SAACd,EAAD,0BAIP,C,sLCxCKiB,E,OAAMC,EAAAA,OAAa,CACvBC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,oGACFL,EAAIM,IAAI,sBADN,cACnBC,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAIM,IAAJ,8BACEK,mBAAmBD,KAFf,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAY,mCAAG,WAAMf,GAAN,uFACHG,EAAIM,IAAJ,iBAAkBT,IADf,cACpBU,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZK,EAAY,mCAAG,WAAMhB,GAAN,uFACHG,EAAIM,IAAJ,iBAAkBT,EAAlB,aADG,cACpBU,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZjB,EAAe,mCAAG,WAAMM,GAAN,uFACNG,EAAIM,IAAJ,iBAAkBT,EAAlB,aADM,cACvBU,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n    margin-bottom: 32px;\n`\nexport const Title = styled.h3`\n    margin-bottom: 8px;\n`\nexport const Text = styled.p`\n    color: #a8b3a8;\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/movies-api';\n\nimport { Item, Title, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const { results } = await getMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        const controller = new AbortController();\n        controller.abort();\n      }\n    };\n    fetch();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <Item key={id}>\n                <Title>Author: {author}</Title>\n                <Text>{content}</Text>\n              </Item>\n            );\n          })}\n        </ul>\n      ) : (\n        <Text>No reviews</Text>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0a5061ab0f3f7e359a07b52243a53d24',\n  },\n});\n\nexport const getTrending = async () => {\n  const response = await api.get('trending/movie/day');\n  return response.data;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await api.get(\n    `/search/movie?query=${encodeURIComponent(query)}`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await api.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await api.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await api.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n"],"names":["Item","styled","Title","Text","useState","reviews","setReviews","movieId","useParams","useEffect","fetch","getMovieReviews","results","AbortController","abort","length","map","id","author","content","api","axios","baseURL","params","api_key","getTrending","get","response","data","getMovieByQuery","query","encodeURIComponent","getMovieById","getMovieCast"],"sourceRoot":""}