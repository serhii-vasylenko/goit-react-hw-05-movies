{"version":3,"file":"static/js/736.ca963cbf.chunk.js","mappings":"kRAEaA,EAAOC,EAAAA,EAAAA,GAAH,8LAYJC,EAAOD,EAAAA,EAAAA,GAAH,uPAUJE,EAAQF,EAAAA,EAAAA,IAAH,mPAeLG,EAAOH,EAAAA,EAAAA,EAAH,qHAQJI,EAAQJ,EAAAA,EAAAA,GAAH,4F,SCClB,EAzCa,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,gHAEaC,EAAAA,EAAAA,IAAaJ,GAF1B,gBAEFF,EAFE,EAEFA,KACRC,EAAQD,GAHE,iDAKS,IAAIO,iBACZC,QAND,yDAAH,qDASXH,GACD,GAAE,CAACH,KAGF,SAACT,EAAD,UACGO,EAAKS,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC1C,OACE,UAAClB,EAAD,YACE,SAACC,EAAD,CACEkB,IACEJ,EAAY,6CAC8BA,GACtC,mHAENK,IAAI,GACJC,MAAM,SAER,SAAClB,EAAD,UAAQa,KACR,SAACd,EAAD,UAAOe,MAXEC,EAcd,KAGN,C,sLC5CKI,E,OAAMC,EAAAA,OAAa,CACvBC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,oGACFL,EAAIM,IAAI,sBADN,cACnBC,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAIM,IAAJ,8BACEK,mBAAmBD,KAFf,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAY,mCAAG,WAAMhB,GAAN,uFACHI,EAAIM,IAAJ,iBAAkBV,IADf,cACpBW,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZnB,EAAY,mCAAG,WAAMO,GAAN,uFACHI,EAAIM,IAAJ,iBAAkBV,EAAlB,aADG,cACpBW,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZK,EAAe,mCAAG,WAAMjB,GAAN,uFACNI,EAAIM,IAAJ,iBAAkBV,EAAlB,aADM,cACvBW,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/movies-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 8px;\n  row-gap: 16px;\n\n  @media screen and (min-width: 767px) {\n    column-gap: 16px;\n  row-gap: 28px;\n  }\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 16px) / 2);\n  \n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 32px) / 3);\n  }\n  @media screen and (min-width: 1280px) {\n    flex-basis: calc((100% - 64px) / 5);\n  }\n`;\nexport const Image = styled.img`\n  width: 100%;\n  height: 204px;\n  margin-bottom: 12px;\n\n  object-fit: cover;\n\n  @media screen and (min-width: 768px) {\n    height: 350px;\n  }\n  @media screen and (min-width: 1280px) {\n    height: 355px;\n  }\n`;\n\nexport const Text = styled.p`\n    color: #a8b3a8;\n\n    @media screen and (max-width: 767px){\n    font-size: 12px;\n  }\n`\n\nexport const Title = styled.h3`\n  @media screen and (max-width: 767px){\n    font-size: 14px;\n  }\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCast } from 'services/movies-api';\n\nimport { List, Item, Image, Text, Title } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const { cast } = await getMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        const controller = new AbortController();\n        controller.abort();\n      }\n    };\n    fetch();\n  }, [movieId]);\n\n  return (\n    <List>\n      {cast.map(({ profile_path, name, character, id }) => {\n        return (\n          <Item key={id}>\n            <Image\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/original${profile_path}`\n                  : 'https://cdn.imgbin.com/22/8/4/imgbin-anonymity-person-computer-icons-word-of-mouth-2d3qNY6qL67q5Men7Qx6fC0B5.jpg'\n              }\n              alt=\"\"\n              width=\"300\"\n            />\n            <Title>{name}</Title>\n            <Text>{character}</Text>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0a5061ab0f3f7e359a07b52243a53d24',\n  },\n});\n\nexport const getTrending = async () => {\n  const response = await api.get('trending/movie/day');\n  return response.data;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await api.get(\n    `/search/movie?query=${encodeURIComponent(query)}`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await api.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await api.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await api.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n"],"names":["List","styled","Item","Image","Text","Title","useState","cast","setCast","movieId","useParams","useEffect","fetch","getMovieCast","AbortController","abort","map","profile_path","name","character","id","src","alt","width","api","axios","baseURL","params","api_key","getTrending","get","response","data","getMovieByQuery","query","encodeURIComponent","getMovieById","getMovieReviews"],"sourceRoot":""}